#!/usr/bin/env python3
import argparse
import pandas as pd
import numpy as np
import torch
import torch.optim as optim
from torch import nn
from crop_classification.utils import read_data, accuracy
from sklearn import tree


def main(args):
    X_tr, X_te, y_tr, y_te = read_data(balanced_test=args.balanced_test)

    clf = tree.DecisionTreeClassifier()
    clf = clf.fit(X_tr, y_tr)

    y_te_hat = clf.predict(X_te)
    acc = accuracy(y_te_hat, y_te)
    print(f"Test Accuracy: {acc}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "--balanced-test",
        action="store_true",
        help="Test with balanced test dataset",
    )

    args = parser.parse_args()

    main(args)
