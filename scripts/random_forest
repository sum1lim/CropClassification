#!/usr/bin/env python3
from crop_classification.utils import read_data, print_metrics
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score


def main():
    X_tr, X_te, X_balanced, y_tr, y_te, y_balanced = read_data()
    # Train-Validation split
    X_tr, X_val, y_tr, y_val = train_test_split(X_tr, y_tr, test_size=0.2)

    best_acc = 0
    best_model = None
    for n in [4, 64, 256, 1024]:

        model = RandomForestClassifier(
            criterion="entropy", n_estimators=n, max_depth=16
        )
        model = model.fit(X_tr, y_tr)

        y_pred = model.predict(X_val)
        acc = accuracy_score(y_pred, y_val)
        print(f"Accuracy: {acc}")

        if best_acc < acc:
            print(f"Hyperparameter tuning: Update at N = {n}")
            best_acc = acc
            best_model = model

    num_nodes = 0
    trees = best_model.estimators_
    for tree in trees:
        num_nodes += tree.tree_.node_count

    print(f"Number of nodes: {num_nodes}")

    print("\nTest on imbalanced dataset:")
    y_pred = best_model.predict(X_te)
    print_metrics(y_pred, y_te)

    print("\nTest on balanced dataset:")
    y_pred = best_model.predict(X_balanced)
    print_metrics(y_pred, y_balanced)


if __name__ == "__main__":
    main()
